nrow(ta_grades(ta_grades[ta_grades$better_at_math == TRUE],)
#9
nrow(ta_grades(ta_grades[ta_grades$better_at_math == TRUE],))
#9
print(nrow(ta_grades(ta_grades[ta_grades$better_at_math == TRUE],)))
#9
print(nrow(ta_grades(ta_grades[ta_grades$better_at_math == TRUE],)))
#9
print(nrow(ta_grades[ta_grades[ta_grades$better_at_math == TRUE],]))
#8 ?
print(ta_grades[3,])
#8 ?
print(ta_grades[4,])
#8 ?
print(ta_grades["Gavin Sreesangkom",])
#8 ?
print(ta_grades["Gavin Sreesangkom",])
#8 ?
print(ta_grades["Gavin Sreesangkom",])
#################
#### PART 1 #####
#################
#1
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom","Coco Li","George Zhang","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25)
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#5
colnames_string <- paste("tas", "math_grades", "spanish_grades", sep = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),"rows and", ncol(ta_grades),"cols:", colnames_string)
print(table_description)
#6
new_col_names <- c("ta", "math_grade", "spanish_grade")
colnames(ta_grades) <- new_col_names
#7
better_at_math <- c(math_grades > spanish_grades)
ta_grades["better_at_math"] <- better_at_math
View(ta_grades)
#8 ?
print(ta_grades["Gavin Sreesangkom",])
#8
print(ta_grades["Gavin Sreesangkom",])
#9
num_better_at_math <- nrow(ta_grades["better_at_math"])
print(num_better_at_math)
#9
num_better_at_math <- nrow(ta_grades["better_at_math"]==TRUE)
print(num_better_at_math)
#9
num_better_at_math <- nrow(ta_grades["better_at_math"]==TRUE)
print(num_better_at_math)
#8
print(ta_grades[ta=="Gavin Sreesangkom",])
#8
rownames(ta_grades) <- ta_grades$ta
print(ta_grades[ta=="Gavin Sreesangkom",])
print(ta_grades["Gavin Sreesangkom",])
print(ta_grades[ta_grades$ta == "	Gavin Sreesangkom"])
print(ta_grades[ta_grades$ta == "Gavin Sreesangkom"])
print(ta_grades[ta_grades$ta == "Gavin Sreesangkom",])
#8
rownames(ta_grades) <- seq(1,8)
#9
num_better_at_math <- nrow(ta_grades$better_at_math == TRUE)
print(num_better_at_math)
print(num_better_at_math)
#9
num_better_at_math <- nrow(ta_grades$better_at_math == FALSE)
print(num_better_at_math)
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE])
#9
num_better_at_math <- nrow(ta_grades[,ta_grades$better_at_math == TRUE])
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
#10
ta_grades[,"math_grades"][ta_grades[,"math_grades"]>4]<- 4
#10
ta_grades[ta_grades$math_grade > 4,] <- 4.0
#10
ta_grades[ta_grades$math_grade > 4, "math_grade"] <- 4.0
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#10
ta_grades[ta_grades$math_grade > 4, "math_grade"] <- 4.0
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom","Coco Li","George Zhang","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25)
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#5
colnames_string <- paste("tas", "math_grades", "spanish_grades", sep = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),"rows and", ncol(ta_grades),"cols:", colnames_string)
print(table_description)
#6
new_col_names <- c("ta", "math_grade", "spanish_grade")
colnames(ta_grades) <- new_col_names
#7
better_at_math <- c(math_grades > spanish_grades)
ta_grades["better_at_math"] <- better_at_math
View(ta_grades)
#8
print(ta_grades[ta_grades$ta == "Gavin Sreesangkom",])
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
#10
ta_grades[ta_grades$math_grade > 4, "math_grade"] <- 4.0
ta_grades[ta_grades$spanish_grade > 4, "spanish_grade"] <- 4.0
setwd("~/")
setwd("C:/Users/jlin8/Desktop/INFO201/a3-using-data-jlin0188")
#11
write.csv(ta_grades, "grade_data.csv", row.names = FALSE)
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
data(Titanic)
View(Titanic)
help("Titanic")
help(Titanic)
#2
is.data.frame(Titanic)
#3
titanic_df <- as.data.frame(Titanic)
#3
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#3
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE,shabah)
#3
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#4
children <- as.data.frame(titanic_df[Age == "child",])
#4
children <- as.data.frame(titanic_df[titanic_df$Age == "child",])
View(children)
#4
children <- as.data.frame(titanic_df[titanic_df$Age == "child",])
View(children)
#4
children <- titanic_df[titanic_df$Age == "child",]
View(children)
print(children)
#4
children <- titanic_df[titanic_df$Age == "Child",]
print(children)
is.data.frame(children)
#5
num_children <- sum(children[["Freq"]])
print(num_children)
#6
not_survive <- titanic_df[titanic_df$Survived == "No",]
most_losses <- titanic_df[titanic_df$Freq == max(not_survive$Freq),]
print(most_losses)
class_df <- titanic_df[titanic_df$Class == ticket_class,]
#7
calc_survival_rate <- function(ticket_class){
class_df <- titanic_df[titanic_df$Class == ticket_class,]
male_df <- class_df[class_df$]
}
#7
calc_survival_rate <- function(ticket_class){
class_df <- titanic_df[titanic_df$Class == ticket_class,]
male_df <- class_df[class_df$]
}
female_children_df <- class_df[class_df$Sex == "Female" | class_df$Age == "Child",]
class_df <- titanic_df[titanic_df$Class == ticket_class,]
#7
calc_survival_rate <- function(ticket_class){
class_df <- titanic_df[titanic_df$Class == ticket_class,]
male_df <- class_df[class_df$Sex == "Male" & class_df$Age == "Adult",]
man_survived_number <- nrow(male_df[male_df$Survived == "Yes",])
man_survived_percent <- man_survived_number/nrow(male_df)
female_children_df <- class_df[class_df$Sex == "Female" | class_df$Age == "Child",]
}
#7
calc_survival_rate <- function(ticket_class){
class_df <- titanic_df[titanic_df$Class == ticket_class,]
male_df <- class_df[class_df$Sex == "Male" & class_df$Age == "Adult",]
man_survived <- nrow(male_df[male_df$Survived == "Yes",])
man_live_number <- sum(man_survived$Freq, na.rm = FALSE)
female_children_df <- class_df[class_df$Sex == "Female" | class_df$Age == "Child",]
}
calc_survival_rate <- function(ticket_class){
class_df <- titanic_df[titanic_df$Class == ticket_class,]
male_df <- class_df[class_df$Sex == "Male" & class_df$Age == "Adult",]
man_survived <- nrow(male_df[male_df$Survived == "Yes",])
man_live_number <- sum(man_survived$Freq)
report <- paste("Of", ticket_class, "class,", man_percent, "% of men survived and", fechi_percent, "% of women and children survived." )
#8
calc_survival_rate("1st")
esp
print("shh")
escape
ecp
esp
esp
#8
calc_survival_rate("1st")
print("shh")
#1
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom","Coco Li","George Zhang","Saurav Sawansukha","YuYu Madigan")
tas
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#1
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom","Coco Li","George Zhang","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25)
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#5
colnames_string <- paste("tas", "math_grades", "spanish_grades", sep = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),"rows and", ncol(ta_grades),"cols:", colnames_string)
print(table_description)
print(table_description)
#################
#### PART 1 #####
#################
#1
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom","Coco Li","George Zhang","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25)
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#5
colnames_string <- paste("tas", "math_grades", "spanish_grades", sep = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),"rows and", ncol(ta_grades),"cols:", colnames_string)
print(table_description)
#6
new_col_names <- c("ta", "math_grade", "spanish_grade")
colnames(ta_grades) <- new_col_names
better_at_math <- c(math_grades > spanish_grades)
ta_grades["better_at_math"] <- better_at_math
View(ta_grades)
#8
print(ta_grades[ta_grades$ta == "Gavin Sreesangkom",])
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
#10
ta_grades[ta_grades$math_grade > 4, "math_grade"] <- 4.0
ta_grades[ta_grades$spanish_grade > 4, "spanish_grade"] <- 4.0
setwd("C:/Users/jlin8/Desktop/INFO201/a3-using-data-jlin0188/data")
#11
write.csv(ta_grades, "grade_data.csv", row.names = FALSE)
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
ta_grades[ta_grades$math_grade > 4, "math_grade"] <- 4.0
ta_grades[ta_grades$spanish_grade > 4, "spanish_grade"] <- 4.0
data(Titanic)
View(Titanic)
help(Titanic)
#2
is.data.frame(Titanic)
#2
is.data.frame(Titanic)
#2
is.data.frame(Titanic)
#2
print(is.data.frame(Titanic))
#2
print(is.data.frame(Titanic))
#3
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#4
children <- titanic_df[titanic_df$Age == "Child",]
#5
num_children <- sum(children[["Freq"]])
print(num_children)
not_survive <- titanic_df[titanic_df$Survived == "No",]
most_losses <- titanic_df[titanic_df$Freq == max(not_survive$Freq),]
print(most_losses)
num_children <- sum(children[["Freq"]])
print(num_children)
#6
not_survive <- titanic_df[titanic_df$Survived == "No",]
most_losses <- titanic_df[titanic_df$Freq == max(not_survive$Freq),]
print(most_losses)
#7
# print the rate men surivived and women and children survived in given ticket class
calc_survival_rate <- function(ticket_class){
# filter the data frame by the given ticket class
class_df <- titanic_df[titanic_df$Class == ticket_class,]
# caculate the rate of survival for men in that ticket class
male_df <- class_df[class_df$Sex == "Male" & class_df$Age == "Adult",]
man_survived <- male_df[male_df$Survived == "Yes",]
man_live_number <- sum(man_survived[["Freq"]])
man_total <- sum(male_df[["Freq"]])
man_percent <- man_live_number/man_total
man_percent <- round(man_percent*100,0)
# caculate the rate of survival for women and children in that ticket class
female_children_df <- class_df[class_df$Sex == "Female" | class_df$Age == "Child",]
female_children_survived <- female_children_df[female_children_df$Survived == "Yes",]
fechi_live_number <- sum(female_children_survived[["Freq"]])
fechi_total <- sum(female_children_df[["Freq"]])
fechi_percent <- fechi_live_number/fechi_total
fechi_percent <- round(fechi_percent*100,0)
# put two calculated percentages into the final report sentence
report <- paste("Of ", ticket_class, " class, ", man_percent, "% of men survived and ", fechi_percent, " % of women and children survived.", sep = "")
}
#8
print(calc_survival_rate("1st"))
print(calc_survival_rate("2nd"))
print(calc_survival_rate("3rd"))
life_exp_df <- read.csv("life_expectancy_years.csv", stringsAsFactors = FALSE)
View(life_exp_df)
#3
# take a single column from the data frame as an argument
# calculate the average life expectancy in years of that year
get_col_mean <- function(certain_column){
result <- mean(certain_column, na.rm = TRUE)
}
#4
print(get_col_mean(life_exp_df[["X2018"]]))
#4
print(get_col_mean(life_exp_df[["X2018"]]))
#5
world_averages <- lapply(life_exp_df[,-1], get_col_mean)
print(word_averages)
print(world_averages)
#5
world_averages <- lapply(life_exp_df[,-1], get_col_mean)
world_change_18 <- world_averages$X2018 - world_averages$X1918
print(world_change_18)
#7
life_exp_df$recent_change <- life_exp_df[,"X2016"] - life_exp_df[,"X1996"]
num_small_gain <- nrow(life_exp_df[life_exp_df$recent_change < 1,])
print(num_small_gain)
most_improved <- life_exp_df[life_exp_df$recent_change == max(life_exp_df$recent_change, na.rm = TRUE),"country"]
print(most_improved)
get_country_change <- function(country_name, exp_df){
the_change <- exp_df[exp_df$country == country_name, "X2018"] - exp_df[exp_df$country == country_name, "X1968"]
}
#11
print(get_country_change("Haiti",life_exp_df))
compare_countries <- function(country_one, country_two, life_df){
country <- c(country_one, country_two)
their_rate <- c(life_df[life_df$country == country_one,"X2018"], life_df[life_df$country == country_two,"X2018"])
their_changes <- c(life_df[life_df$country == country_one, "recent_change"], life_df[life_df$country == country_two, "recent_change"])
comparsion <- data.frame(country, their_rate, their_changes, stringsAsFactors = FALSE)
colnames(comparsion) <- c("country", "X2018", "recent_change")
comparsion
}
View(compare_countries("China","Bolivia",life_exp_df))
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv('data/gates_money.csv', StringAsFactors = FALSE)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv('data/gates_money.csv', stringsAsFactors = FALSE)
setwd("C:/Users/jlin8/Desktop/book-exercises/chapter-10-exercises/exercise-4")
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv('data/gates_money.csv', stringsAsFactors = FALSE)
# Use the View function to look at the loaded data
View(grants)
sum(grants[grants$start_year == "2010", "total amount"])
#13
compare_countries("United States", "Cuba", life_exp_df)
#13
us_vs_cuba <- compare_countries("United States", "Cuba", life_exp_df)
print(us_vs_cuba)
#################
#### PART 1 #####
#################
#1
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom","Coco Li","George Zhang","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25)
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#5
colnames_string <- paste("tas", "math_grades", "spanish_grades", sep = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),"rows and", ncol(ta_grades),"cols:", colnames_string)
print(table_description)
#6
new_col_names <- c("ta", "math_grade", "spanish_grade")
colnames(ta_grades) <- new_col_names
#7
better_at_math <- c(math_grades > spanish_grades)
ta_grades["better_at_math"] <- better_at_math
#8
print(ta_grades[ta_grades$ta == "Gavin Sreesangkom",])
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
#10
ta_grades[ta_grades$math_grade > 4, "math_grade"] <- 4.0
ta_grades[ta_grades$spanish_grade > 4, "spanish_grade"] <- 4.0
#11
write.csv(ta_grades, "grade_data.csv", row.names = FALSE)
#################
#### PART 2 #####
#################
#1
data(Titanic)
View(Titanic)
help(Titanic)
#2
print(is.data.frame(Titanic))
#3
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#4
children <- titanic_df[titanic_df$Age == "Child",]
#5
num_children <- sum(children[["Freq"]])
print(num_children)
#6
not_survive <- titanic_df[titanic_df$Survived == "No",]
most_losses <- titanic_df[titanic_df$Freq == max(not_survive$Freq),]
print(most_losses)
#7
# print the rate men surivived and women and children survived in given ticket class
calc_survival_rate <- function(ticket_class){
# filter the data frame by the given ticket class
class_df <- titanic_df[titanic_df$Class == ticket_class,]
# caculate the rate of survival for men in that ticket class
male_df <- class_df[class_df$Sex == "Male" & class_df$Age == "Adult",]
man_survived <- male_df[male_df$Survived == "Yes",]
man_live_number <- sum(man_survived[["Freq"]])
man_total <- sum(male_df[["Freq"]])
man_percent <- man_live_number/man_total
man_percent <- round(man_percent*100,0)
# caculate the rate of survival for women and children in that ticket class
female_children_df <- class_df[class_df$Sex == "Female" | class_df$Age == "Child",]
female_children_survived <- female_children_df[female_children_df$Survived == "Yes",]
fechi_live_number <- sum(female_children_survived[["Freq"]])
fechi_total <- sum(female_children_df[["Freq"]])
fechi_percent <- fechi_live_number/fechi_total
fechi_percent <- round(fechi_percent*100,0)
# put two calculated percentages into the final report sentence
report <- paste("Of ", ticket_class, " class, ", man_percent, "% of men survived and ", fechi_percent, " % of women and children survived.", sep = "")
}
#8
print(calc_survival_rate("1st"))
print(calc_survival_rate("2nd"))
print(calc_survival_rate("3rd"))
#9
# 1. Survival rates seem having an increasing pattern from 3rd class to 1st class
# 2. In each class, the survival rate for women and children is much higher than the men
#################
#### PART 3 #####
#################
#1
#Period 1800-1970, main source: v7, which is based on 100 sources compiled by Mattias Lindgren, who also assessed the fatal impacts of the biggest disasters in history and made rough guesstimates showing in the charts as sudden dips in life expectancy.
#Period 1970-2016, main source: IHME, the Institute for Health Metrics and Evaluation, University of Washington, Seattle, published September 2017. Accessed October 7, 2017. Data for every five years can be found in the Appendix Table 13A published with this Lancet article, zip file downloaded here using the file named IHME_GBD_2016_MORTALITY_1970_2016_APPENDIX_TABLE_13A_Y2017M09D14.XLSX which has data for every five years. Annual estimates were downloaded from the GBD results tool: https://vizhub.healthdata.org/mortality/results.
#Period 2017-2099, main source: UN, UN forecasts from World Population Prospects 2017 published in the file with Annually interpolated demographic indicators, called WPP2017_INT_F01_ANNUAL_DEMOGRAPHIC_INDICATORS.xlsx, accessed on September 2, 2017.
#2
life_exp_df <- read.csv("life_expectancy_years.csv", stringsAsFactors = FALSE)
View(life_exp_df)
#3
# take a single column from the data frame as an argument
# calculate the average life expectancy in years of that year
get_col_mean <- function(certain_column){
result <- mean(certain_column, na.rm = TRUE)
}
#4
print(get_col_mean(life_exp_df[["X2018"]]))
#5
world_averages <- lapply(life_exp_df[,-1], get_col_mean)
#6
world_change_18 <- world_averages$X2018 - world_averages$X1918
print(world_change_18)
#7
life_exp_df$recent_change <- life_exp_df[,"X2016"] - life_exp_df[,"X1996"]
#8
num_small_gain <- nrow(life_exp_df[life_exp_df$recent_change < 1,])
print(num_small_gain)
#9
most_improved <- life_exp_df[life_exp_df$recent_change == max(life_exp_df$recent_change, na.rm = TRUE),"country"]
print(most_improved)
#10
# takes a name of the country and a data frame of life expectancies as arguments
# calculate the differnece of the life expectancy between 2018 and 1968 in that country
get_country_change <- function(country_name, exp_df){
the_change <- exp_df[exp_df$country == country_name, "X2018"] - exp_df[exp_df$country == country_name, "X1968"]
}
#11
print(get_country_change("Haiti",life_exp_df))
#12
# takes two countries' names, and a data frame of life expectancies as arguments
# construct a new data frame which includes two countries' name, their life exptancies at 2018 year,
# and their recent changes
compare_countries <- function(country_one, country_two, life_df){
country <- c(country_one, country_two)
their_rate <- c(life_df[life_df$country == country_one,"X2018"], life_df[life_df$country == country_two,"X2018"])
their_changes <- c(life_df[life_df$country == country_one, "recent_change"], life_df[life_df$country == country_two, "recent_change"])
# construct the data frame
comparsion <- data.frame(country, their_rate, their_changes, stringsAsFactors = FALSE)
colnames(comparsion) <- c("country", "X2018", "recent_change")
comparsion
}
#13
us_vs_cuba <- compare_countries("United States", "Cuba", life_exp_df)
print(us_vs_cuba)
