response <- GET(paste0(base_url, "/search/person"), query = params_list)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
actor_df <- response_data$results
id <- actor_df[1,"id"]
list_of_data_frames <- actor_df$known_for
known_for_df <- list_of_data_frames[[1]]
known_for <- pull(known_for_df, title)
sec_response <- GET(paste0(base_url,"/person/", id), query = params_list)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
names(sec_response_data)
the_name <- sec_response_data$name
the_id <- sec_response_data$id
the_imdb_id <- sec_response_data$imdb_id
the_biography <- sec_response_data$biography
result <- list(name = the_name, id = the_id, imdb_id <- the_imdb_id, biography = the_biography, title = known_for)
}
b <- get_actor_data("Brad Pitt")
print(b)
get_actor_data("Brad Pitt")[[3]]
b <- get_actor_data("Brad Pitt")
print(b)
# 2. Specific Actor Data
get_actor_data <- function(name){
params_list <- list(api_key = tmdb_key, query = name)
response <- GET(paste0(base_url, "/search/person"), query = params_list)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
actor_df <- response_data$results
id <- actor_df[1,"id"]
list_of_data_frames <- actor_df$known_for
known_for_df <- list_of_data_frames[[1]]
known_for <- pull(known_for_df, title)
sec_response <- GET(paste0(base_url,"/person/", id), query = params_list)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
names(sec_response_data)
the_name <- sec_response_data$name
the_id <- sec_response_data$id
the_imdb_id <- sec_response_data$imdb_id
the_biography <- sec_response_data$biography
result <- list(name = the_name, id = the_id, imdb <- the_imdb_id, biography = the_biography, title = known_for)
}
b <- get_actor_data("Brad Pitt")
print(b)
# 2. Specific Actor Data
get_actor_data <- function(name){
params_list <- list(api_key = tmdb_key, query = name)
response <- GET(paste0(base_url, "/search/person"), query = params_list)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
actor_df <- response_data$results
id <- actor_df[1,"id"]
list_of_data_frames <- actor_df$known_for
known_for_df <- list_of_data_frames[[1]]
known_for <- pull(known_for_df, title)
sec_response <- GET(paste0(base_url,"/person/", id), query = params_list)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
names(sec_response_data)
the_name <- sec_response_data$name
the_id <- sec_response_data$id
the_imdb_id <- sec_response_data$imdb_id
the_biography <- sec_response_data$biography
result <- list(name = the_name, id = the_id, imdb_id <- the_imdb_id, biography = the_biography, title = known_for)
}
b <- get_actor_data("Brad Pitt")
print(b)
get_actor_data("Brad Pitt")$title
print(get_actor_data("Brad Pitt")$title)
get_actor_data("Brad Pitt")$title
get_actor_data("Brad Pitt")$title[1]
b <- get_actor_data("Brad Pitt")
print(b)
View(a)
View(director_movie)
# 3. Analysis of an Actor
# how many movies shared by an actor and a director
analyze_actor <- function(actor_id, director_id){
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title)
View(director_movie)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
summary_number <- summarize(combined_data, number_of_movie = n())
result <- list(number_of_shared_movie = summary_number)
}
View(director_movie)
director_movie <- select(director_df, title)
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
b <- get_actor_data("David Fincher")
print(b)
# 3. Analysis of an Actor
# how many movies shared by an actor and a director
analyze_actor <- function(actor_id, director_id){
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title)
View(director_movie)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
summary_number <- summarize(combined_data, number_of_movie = n())
result <- list(number_of_shared_movie = summary_number)
}
View(director_movie)
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title)
View(director_movie)
View(actor_df)
director_movie <- select(director_df, title, vote_average)
View(director_movie)
actor_movie <- select(actor_df, title, vote_average)
View(actor_movie)
View(combined_data)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
View(combined_data)
combined_data$vote_average.x <- NULL
View(combined_data)
colnames(combined_data) <- c("title", "vote_average")
View(combined_data)
View(combined_data)
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean())
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
result <- list(number_of_shared_movie = summary_number, avg_vote_of_shared_movie = avg_vote)
result <- list(number_of_shared_movie = the_summary, avg_vote_of_shared_movie = avg_vote)
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
result <- list(number_of_shared_movie = the_summary, avg_vote_of_shared_movie = avg_vote)
print(the_summary)
result <- list(number_of_shared_movie = the_summary[[number_of_movie]], avg_vote_of_shared_movie = the_summary[[avg_vote]])
result <- list(number_of_shared_movie = the_summary$number_of_movie, avg_vote_of_shared_movie = the_summary$avg_vote)
result
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = [1,2])
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2])
result
# 3. Analysis of an Actor
# how many movies shared by an actor and a director and the what is the average vote of their films
analyze_actor <- function(actor_id, director_id){
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title, vote_average)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title, vote_average)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
combined_data$vote_average.x <- NULL
colnames(combined_data) <- c("title", "vote_average")
View(combined_data)
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
print(the_summary)
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2])
result
}
library("httr")
library("jsonlite")
library("dplyr")
# Accessing the Data API
base_url <- "https://api.themoviedb.org/3"
source("apikey.R")
key_param <- list(api_key = tmdb_key)
# Data Analysis
# 1. Trending Actors
get_trending_table <- function(){
response <- GET(paste0(base_url,"/trending/person/week"), query = key_param)
response_text <- content(response, type = "text")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
trending_df <- response_data$results
# View(trending_df)
trending_df <- filter(trending_df, known_for_department == "Acting" )
trending_df <- mutate(trending_df, photo = paste0("![",name,"](",paste0("https://image.tmdb.org/t/p/h100", profile_path),")"))
trending_df <- select(trending_df ,name, photo)
colnames(trending_df) <- c("Name", "Photo")
trending_df <- head(trending_df, 5)
trending_df
}
# 2. Specific Actor Data
get_actor_data <- function(name){
params_list <- list(api_key = tmdb_key, query = name)
response <- GET(paste0(base_url, "/search/person"), query = params_list)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
actor_df <- response_data$results
id <- actor_df[1,"id"]
list_of_data_frames <- actor_df$known_for
known_for_df <- list_of_data_frames[[1]]
known_for <- pull(known_for_df, title)
sec_response <- GET(paste0(base_url,"/person/", id), query = params_list)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
names(sec_response_data)
the_name <- sec_response_data$name
the_id <- sec_response_data$id
the_imdb_id <- sec_response_data$imdb_id
the_biography <- sec_response_data$biography
result <- list(name = the_name, id = the_id, imdb_id <- the_imdb_id, biography = the_biography, title = known_for)
}
# 3. Analysis of an Actor
# how many movies shared by an actor and a director and the what is the average vote of their films
analyze_actor <- function(actor_id, director_id){
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title, vote_average)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title, vote_average)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
combined_data$vote_average.x <- NULL
colnames(combined_data) <- c("title", "vote_average")
View(combined_data)
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
print(the_summary)
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2])
}
library("httr")
library("jsonlite")
library("dplyr")
# Accessing the Data API
base_url <- "https://api.themoviedb.org/3"
source("apikey.R")
key_param <- list(api_key = tmdb_key)
# Data Analysis
# 1. Trending Actors
get_trending_table <- function(){
response <- GET(paste0(base_url,"/trending/person/week"), query = key_param)
response_text <- content(response, type = "text")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
trending_df <- response_data$results
# View(trending_df)
trending_df <- filter(trending_df, known_for_department == "Acting" )
trending_df <- mutate(trending_df, photo = paste0("![",name,"](",paste0("https://image.tmdb.org/t/p/h100", profile_path),")"))
trending_df <- select(trending_df ,name, photo)
colnames(trending_df) <- c("Name", "Photo")
trending_df <- head(trending_df, 5)
trending_df
}
# 2. Specific Actor Data
get_actor_data <- function(name){
params_list <- list(api_key = tmdb_key, query = name)
response <- GET(paste0(base_url, "/search/person"), query = params_list)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
actor_df <- response_data$results
id <- actor_df[1,"id"]
list_of_data_frames <- actor_df$known_for
known_for_df <- list_of_data_frames[[1]]
known_for <- pull(known_for_df, title)
sec_response <- GET(paste0(base_url,"/person/", id), query = params_list)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
names(sec_response_data)
the_name <- sec_response_data$name
the_id <- sec_response_data$id
the_imdb_id <- sec_response_data$imdb_id
the_biography <- sec_response_data$biography
result <- list(name = the_name, id = the_id, imdb_id <- the_imdb_id, biography = the_biography, title = known_for)
}
# 3. Analysis of an Actor
# how many movies shared by an actor and a director and the what is the average vote of their films
analyze_actor <- function(actor_id, director_id){
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title, vote_average)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title, vote_average)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
combined_data$vote_average.x <- NULL
colnames(combined_data) <- c("title", "vote_average")
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
print(the_summary)
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2], combined_data)
}
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title, vote_average)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title, vote_average)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
combined_data$vote_average.x <- NULL
colnames(combined_data) <- c("title", "vote_average")
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
print(the_summary)
result
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2], combined_data)
result
library("httr")
library("jsonlite")
library("dplyr")
# Accessing the Data API
base_url <- "https://api.themoviedb.org/3"
source("apikey.R")
key_param <- list(api_key = tmdb_key)
# Data Analysis
# 1. Trending Actors
get_trending_table <- function(){
response <- GET(paste0(base_url,"/trending/person/week"), query = key_param)
response_text <- content(response, type = "text")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
trending_df <- response_data$results
# View(trending_df)
trending_df <- filter(trending_df, known_for_department == "Acting" )
trending_df <- mutate(trending_df, photo = paste0("![",name,"](",paste0("https://image.tmdb.org/t/p/h100", profile_path),")"))
trending_df <- select(trending_df ,name, photo)
colnames(trending_df) <- c("Name", "Photo")
trending_df <- head(trending_df, 5)
trending_df
}
# 2. Specific Actor Data
get_actor_data <- function(name){
params_list <- list(api_key = tmdb_key, query = name)
response <- GET(paste0(base_url, "/search/person"), query = params_list)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
actor_df <- response_data$results
id <- actor_df[1,"id"]
list_of_data_frames <- actor_df$known_for
known_for_df <- list_of_data_frames[[1]]
known_for <- pull(known_for_df, title)
sec_response <- GET(paste0(base_url,"/person/", id), query = params_list)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
names(sec_response_data)
the_name <- sec_response_data$name
the_id <- sec_response_data$id
the_imdb_id <- sec_response_data$imdb_id
the_biography <- sec_response_data$biography
result <- list(name = the_name, id = the_id, imdb_id <- the_imdb_id, biography = the_biography, title = known_for)
}
# 3. Analysis of an Actor
# how many movies shared by an actor and a director and the what is the average vote of their films
analyze_actor <- function(actor_id, director_id){
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title, vote_average)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title, vote_average)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
combined_data$vote_average.x <- NULL
colnames(combined_data) <- c("title", "vote_average")
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2], combined_data)
}
analyze_actor(actor_id, director_id)[2]
analyze_actor(actor_id, director_id)[1]
library("httr")
library("jsonlite")
library("dplyr")
# Accessing the Data API
base_url <- "https://api.themoviedb.org/3"
source("apikey.R")
key_param <- list(api_key = tmdb_key)
# Data Analysis
# 1. Trending Actors
get_trending_table <- function(){
response <- GET(paste0(base_url,"/trending/person/week"), query = key_param)
response_text <- content(response, type = "text")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
trending_df <- response_data$results
# View(trending_df)
trending_df <- filter(trending_df, known_for_department == "Acting" )
trending_df <- mutate(trending_df, photo = paste0("![",name,"](",paste0("https://image.tmdb.org/t/p/h100", profile_path),")"))
trending_df <- select(trending_df ,name, photo)
colnames(trending_df) <- c("Name", "Photo")
trending_df <- head(trending_df, 5)
trending_df
}
# 2. Specific Actor Data
get_actor_data <- function(name){
params_list <- list(api_key = tmdb_key, query = name)
response <- GET(paste0(base_url, "/search/person"), query = params_list)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
# str(response_data)
# names(response_data)
actor_df <- response_data$results
id <- actor_df[1,"id"]
list_of_data_frames <- actor_df$known_for
known_for_df <- list_of_data_frames[[1]]
known_for <- pull(known_for_df, title)
sec_response <- GET(paste0(base_url,"/person/", id), query = params_list)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
names(sec_response_data)
the_name <- sec_response_data$name
the_id <- sec_response_data$id
the_imdb_id <- sec_response_data$imdb_id
the_biography <- sec_response_data$biography
result <- list(name = the_name, id = the_id, imdb_id <- the_imdb_id, biography = the_biography, title = known_for)
}
# 3. Analysis of an Actor
# how many movies shared by an actor and a director and the what is the average vote of their films
analyze_actor <- function(actor_id, director_id){
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title, vote_average)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title, vote_average)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
combined_data$vote_average.x <- NULL
colnames(combined_data) <- c("title", "vote_average")
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2], combined_data)
}
analyze_actor(actor_id, director_id)[1]
analyze_actor(actor_id, director_id)[2]
# 3. Analysis of an Actor
# how many movies shared by an actor and a director and the what is the average vote of their films
analyze_actor <- function(actor_id, director_id){
actor_id = 287
director_id = 7467
response <- GET(paste0(base_url, "/person/", actor_id, "/movie_credits"), query = key_param)
response_text <- content(response, type = "text", encoding = "UTF-8")
response_data <- fromJSON(response_text)
actor_df <- response_data$cast
actor_movie <- select(actor_df, title, vote_average)
sec_response <- GET(paste0(base_url, "/person/", director_id, "/movie_credits"), query = key_param)
sec_response_text <- content(sec_response, type = "text", encoding = "UTF-8")
sec_response_data <- fromJSON(sec_response_text)
director_df <- sec_response_data$cast
director_movie <- select(director_df, title, vote_average)
combined_data <- inner_join(actor_movie, director_movie, by = "title")
combined_data$vote_average.x <- NULL
colnames(combined_data) <- c("title", "vote_average")
the_summary <- summarize(combined_data, number_of_movie = n(), avg_vote = mean(vote_average))
result <- list(number_of_shared_movie = the_summary[1,1], avg_vote_of_shared_movie = the_summary[1,2], raw_data = combined_data)
}
analyze_actor(actor_id, director_id)[2]
analyze_actor(actor_id, director_id)$raw_data
